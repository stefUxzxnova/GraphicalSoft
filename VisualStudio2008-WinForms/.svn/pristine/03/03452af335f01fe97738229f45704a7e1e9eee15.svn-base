using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;

namespace Draw.src.Model
{
    internal class StarShape : Shape
    {
        #region Constructor

        public StarShape(RectangleF rect) : base(rect)
        {
        }

        public StarShape(RectangleShape rectangle) : base(rectangle)
        {
        }

        #endregion

        /// <summary>
        /// Проверка за принадлежност на точка point към правоъгълника.
        /// В случая на правоъгълник този метод може да не бъде пренаписван, защото
        /// Реализацията съвпада с тази на абстрактния клас Shape, който проверява
        /// дали точката е в обхващащия правоъгълник на елемента (а той съвпада с
        /// елемента в този случай).
        /// </summary>
        public override bool Contains(PointF point)
        {
            if (base.Contains(point))
                // Проверка дали е в обекта само, ако точката е в обхващащия правоъгълник.
                // В случая на правоъгълник - директно връщаме true
                return true;
            else
                // Ако не е в обхващащия правоъгълник, то неможе да е в обекта и => false
                return false;
        }

        /// <summary>
        /// Частта, визуализираща конкретния примитив.
        /// </summary>
        public override void DrawSelf(Graphics grfx)
        {
            base.DrawSelf(grfx);
            FillColor = Color.FromArgb(
                Opacity,
                FillColor.R,
                FillColor.G,
                FillColor.B)
            ;


            PointF[] points = new PointF[10];
            points[0] = new Point(0, 40);
            points[1] = new Point(35, 38);
            points[2] = new Point(40, 0);
            points[3] = new Point(45, 38);
            points[4] = new Point(75, 40);
            points[5] = new Point(50, 50);
            points[6] = new Point(55, 85);
            points[7] = new Point(40, 57);
            points[8] = new Point(25, 85);
            points[9] = new Point(30, 50);

            grfx.FillPolygon(new SolidBrush(FillColor), points);
            grfx.DrawPolygon(new Pen(StrokeColor, ContourWidth), points);

        }
    }
}
